// Пакет, в котором находится модель данных о месте хранения/нахождения продукта
package ru.contlog.mobile.helper.model

// Импорты для работы с датами и сериализацией JSON
import kotlinx.datetime.LocalDateTime
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * Модель данных, представляющая одно **место хранения** (или нахождения) продукта.
 *
 * Используется в составе объекта [Product] (поле `places: List<ProductPlace>`).
 * Описывает, где именно находится товар: склад, ячейка, партия, остатки и т.д.
 *
 * Поля сериализуются из JSON с русскоязычными ключами (типично для интеграций с 1С).
 * Использует kotlinx.serialization для безопасного и типизированного парсинга.
 */
@Serializable
data class ProductPlace(
    /**
     * Код адреса хранения (например, "Ячейка-A1", "Склад-3").
     * В JSON: "АдресКод"
     */
    @SerialName("АдресКод") val addressCode: String,

    /**
     * Количество товара, зарезервированного под заказы (недоступно для свободного использования).
     * В JSON: "ОстатокВРезерве"
     */
    @SerialName("ОстатокВРезерве") val leftoversInReserve: Int,

    /**
     * Свободный остаток — количество товара, доступное для отгрузки или перемещения.
     * В JSON: "ОстатокСвободный"
     */
    @SerialName("ОстатокСвободный") val leftoversFree: Int,

    /**
     * Срок годности товара (дата, до которой продукт пригоден к использованию).
     * Тип: LocalDateTime (без часового пояса).
     * Пример JSON: "2026-12-31T00:00:00"
     * В JSON: "СрокГодности"
     */
    @SerialName("СрокГодности") val bestBefore: LocalDateTime,

    /**
     * Дата производства партии товара.
     * В JSON: "ДатаПроизводства"
     */
    @SerialName("ДатаПроизводства") val productionDate: LocalDateTime,

    /**
     * Дополнительная текстовая информация (возможно, спецификация, примечание, сертификат).
     * В JSON: "СправкаА"
     */
    @SerialName("СправкаА") val infoA: String,

    /**
     * Флаг, указывающий, является ли это место **основным** для данного продукта.
     * Может использоваться для сортировки или выделения в UI.
     * В JSON: "ЭтоОсновноеМесто"
     */
    @SerialName("ЭтоОсновноеМесто") val primaryPlace: Boolean,

    /**
     * Размер в МУП (Минимальная Упаковочная Единица) — количество в минимальной упаковке.
     * В JSON: "РазмерМУП"
     */
    @SerialName("РазмерМУП") val sizeMUP: Int,

    /**
     * Размер в ТУП (Транспортная Упаковочная Единица) — количество в транспортной упаковке.
     * В JSON: "РазмерТУП"
     */
    @SerialName("РазмерТУП") val sizeTUP: Int,

    /**
     * Уникальный код записи о месте (возможно, внутренний идентификатор в системе).
     * В JSON: "Код"
     */
    @SerialName("Код") val code: String,

    /**
     * Артикул товара (может дублировать productCode из родительского Product).
     * В JSON: "Артикул"
     */
    @SerialName("Артикул") val article: String,

    /**
     * Полное строковое представление номенклатуры (например, "Молоко 3.2%, 1л, пакет").
     * В JSON: "НоменклатураСтрокой"
     */
    @SerialName("НоменклатураСтрокой") val nomenclatureString: String,

    /**
     * Флаг: товар подлежит учёту в системе "Меркурий" (ветеринарный контроль в РФ).
     * В JSON: "ТоварМеркурий"
     */
    @SerialName("ТоварМеркурий") val productMercury: Boolean,

    /**
     * Флаг: товар подлежит маркировке в системе "Честный ЗНАК" (российская система маркировки).
     * В JSON: "ТоварЧестныйЗнак"
     */
    @SerialName("ТоварЧестныйЗнак") val productFairMark: Boolean,

    /**
     * Флаг: запись является рекламной (например, демо-товар, не для продажи).
     * В JSON: "ЭтоРеклама"
     */
    @SerialName("ЭтоРеклама") val isAdvertisement: Boolean,

    /**
     * Номер партии от поставщика (для отслеживания происхождения).
     * В JSON: "ПартияПоставщика"
     */
    @SerialName("ПартияПоставщика") val suppliersBatch: String,

    /**
     * Уникальный идентификатор адреса хранения (например, UID ячейки склада).
     * В JSON: "АдресUID"
     */
    @SerialName("АдресUID") val addressUID: String,

    /**
     * Уникальный идентификатор номенклатуры (товара) в системе.
     * Может совпадать с productUID из родительского Product.
     * В JSON: "НоменклатураUID"
     */
    @SerialName("НоменклатураUID") val nomenclatureUID: String,
)